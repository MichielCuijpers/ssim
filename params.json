{
  "name": "SSIM.js",
  "tagline": "JavaScript SSIM",
  "body": "# SSIM.JS\r\n\r\nSSIM.JS is a JavaScript implementation of the SSIM algorithms published by [Wang, et al. 2004](/assets/ssim.pdf) on \"Image Quality Assessment: From Error Visibility to Structural Similarity\".\r\n\r\nSSIM measures structural similarity of images in a `[0, 1]` index. The closer SSIM is to `1` the more similar both images are. The advantage of SSIM over other measures like [PSNR](https://en.wikipedia.org/wiki/Peak_signal-to-noise_ratio) and [MSE](https://en.wikipedia.org/wiki/Mean_squared_error) is that it correlates better with subjective ratings on image quality.\r\n\r\nFor instance, the following images have a similar MSE rating:\r\n\r\n|                                       |                                       |                                       |\r\n| ------------------------------------  | ------------------------------------- | ------------------------------------- |\r\n| ![](https://raw.githubusercontent.com/obartra/ssim/master/spec/samples/einstein/Q1.gif)    | ![](https://raw.githubusercontent.com/obartra/ssim/master/spec/samples/einstein/Q0988.gif) | ![](https://raw.githubusercontent.com/obartra/ssim/master/spec/samples/einstein/Q0913.gif) |\r\n| Original, MSE = 0, SSIM = 1           | MSE = 144, SSIM = 0.988               | MSE = 144, SSIM = 0.913               |\r\n| ![](https://raw.githubusercontent.com/obartra/ssim/master/spec/samples/einstein/Q0840.gif) | ![](https://raw.githubusercontent.com/obartra/ssim/master/spec/samples/einstein/Q0694.gif) | ![](https://raw.githubusercontent.com/obartra/ssim/master/spec/samples/einstein/Q0662.gif) |\r\n| MSE = 144, SSIM = 0.840               | MSE = 144, SSIM = 0.694               | MSE = 142, SSIM = 0.662               |\r\n\r\n*Table extracted from http://www.cns.nyu.edu/~lcv/ssim/*\r\n\r\nFor a general overview on SSIM check the Wikipedia article [here](https://en.wikipedia.org/wiki/Structural_similarity).\r\n\r\nThis project includes a line-by-line port of the original Matlab scripts, they are available [here](https://ece.uwaterloo.ca/~z70wang/research/iwssim/) with their datasets.\r\n\r\n## Installation\r\n\r\n```shell\r\nnpm install ssim.js\r\n```\r\n\r\nIf you run into any issues during the installation, check the [node-canvas](https://github.com/Automattic/node-canvas#installation) installation steps.\r\n\r\n## Usage\r\n\r\n```javascript\r\n\r\nimport ssim from 'ssim.js';\r\n\r\nssim('./img1.jpg', './img2.jpg')\r\n\t.then(out => console.log(`SSIM: ${out.mssim} (generated in: ${out.performance}ms)`))\r\n\t.catch(err => console.error('Error generating SSIM', err));\r\n```\r\nRun this code on [runkit](https://runkit.com/obartra/runkit-npm-ssim-js).\r\n\r\nFor more advanced usage, check the wiki [here](https://github.com/obartra/ssim/wiki/Usage).\r\n\r\n## CLI\r\n\r\nThere's also a small CLI tool that you can call from your npm scripts as `ssim <img1> <img2>`. Run `ssim --help` to see additional options.\r\n\r\n### Output\r\n\r\n| Parameter   | Description                                                 |\r\n| ----------- | ----------------------------------------------------------- |\r\n| mssim       | Mean SSIM, the average of all `ssim_map` values             |\r\n| ssim_map    | An array of arrays containing the ssim value at each window |\r\n| performance | The total time to compute SSIM (in milliseconds)            |\r\n\r\nTo view the steps taken to validate the results, check the wiki [here](https://github.com/obartra/ssim/wiki/Results-Validation).\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}